{
  "name": "stormpath",
  "version": "0.4.3",
  "main": "lib/stormpath.js",
  "description": "Official Stormpath SDK for Node.js",
  "keywords": [
    "stormpath",
    "api",
    "wrapper",
    "sdk",
    "client",
    "user",
    "user management",
    "user login",
    "identity",
    "identity management",
    "account",
    "account login",
    "login",
    "authentication",
    "authorization",
    "access control",
    "password",
    "password hash"
  ],
  "license": "Apache-2.0",
  "homepage": "https://github.com/stormpath/stormpath-sdk-node",
  "bugs": {
    "url": "https://github.com/stormpath/stormpath-sdk-node/issues"
  },
  "author": {
    "name": "Stormpath, Inc.",
    "email": "support@stormpath.com",
    "url": "http://www.stormpath.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stormpath/stormpath-sdk-node.git"
  },
  "scripts": {
    "test": "grunt",
    "coverage": "node ./node_modules/istanbul/lib/cli cover ./node_modules/mocha/bin/_mocha"
  },
  "dependencies": {
    "underscore": "~1.5.2",
    "underscore.string": "~2.3.3",
    "properties-parser": "~0.1.1",
    "request": "~2.33.0",
    "moment": "~2.5.1",
    "node-uuid": "~1.4.0",
    "async": "~0.7.0",
    "redis": "~0.10.1",
    "memcached": "~0.2.8",
    "glob": "3",
    "jwt-simple": "~0.2.0"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.11",
    "grunt-contrib-jshint": "~0.7.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt-contrib-watch": "~0.5.0",
    "grunt-mocha-istanbul": "~1.2.0",
    "grunt-mocha-test": "~0.10.0",
    "load-grunt-tasks": "~0.2.0",
    "time-grunt": "~0.2.0",
    "jshint-stylish": "~0.1.3",
    "chai": "~1.8.1",
    "mocha": "~1.17.0",
    "sinon": "~1.7.3",
    "mocha-sinon": "~1.1.0",
    "sinon-chai": "~2.4.0",
    "istanbul": "~0.2.4",
    "lodash": "~2.4.1",
    "nock": "~0.27.2"
  },
  "readme": "# Stormpath Node.js SDK [![Build Status](https://secure.travis-ci.org/stormpath/stormpath-sdk-node.png?branch=master)](http://travis-ci.org/stormpath/stormpath-sdk-node)\n\nCopyright &copy; 2014 Stormpath, Inc. and contributors.\n\nThis project is open-source via the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).\n\nFor additional information, please see the [Stormpath Node.js API Documentation](http://docs.stormpath.com/nodejs/api).\n\n## Install\n\n```bash\nnpm install stormpath\n```\n\n## Quickstart\n\nThe Quickstart is on the front page of the [Stormpath Node.js API Documentation](http://docs.stormpath.com/nodejs/api).\n\n## Change Log\n\n### 0.4.3\n\nCache fix that was preventing expanded resources from being cached\n\n### 0.4.2\n\nFix the Oauth authenticator to provide `requestedScopes` and `grantedScopes` as an array of strings, not a single string.\n\n### 0.4.1\n\nUpdated User-Agent string to be spec compliant and extendable\n\n### 0.4.0\n\n#### ID Site Functionality! ####\n\nYour own hosted, white-labeled Identity Site, what we call an 'ID Site'!\n\nYou can have a 100% customizable white-labeled site, for example, `https://id.awesomeapp.com` or\n`https://my.awesomeapp.com`, hosted and served securely by Stormpath.  Your ID Site provides your end-users with a\nhosted and secure registration, login, and password reset functionality, and **completely hands-off integration with\nGoogle and Facebook!**.\n\nYour white-labeled ID Site is beautiful and 'just works' out-of-the box and requires no development effort, but if you\nwant to customize it in any way, you can easily fork our default GitHub repo and customize it as you desire, and we'll\nserve your fork securely just the same.\n\nAll that is required for this to work is that your application redirects your end-user to your secure ID Site URL and,\nwhen the user is done, can receive a redirect back to your application.  This 0.4.0 release includes two\nadditional functions so you don't have to code that yourself.\n\nSee the new **[createIdSiteUrl](http://docs.stormpath.com/nodejs/api/application#createIdSiteUrl)**\n method (for redirecting end-users to your ID Site) and the\n**[handleIdSiteCallback](http://docs.stormpath.com/nodejs/api/application#handleIdSiteCallback)**\nmethod (for handling the return reply from your ID Site) for code examples!\n\nFor a comprehensive overview of the ID Site feature, see the [ID Site Feature Guide](http://docs.stormpath.com/guides/using-id-site)\n\n#### Improvements ####\n\n  * When you call `save()` and `delete()` on any resource, the callback is now optional and can be omitted.\n  * HTML/CSS layout improvements to the documentation app, it is now mobile friendly!\n  * Several descriptive fixes to the documentation.\n\n### 0.3.0\n\n#### New Features\n\nSecure your REST API using OAuth 2!\n\nThe Stormpath Node SDK can now act as an OAuth 2 Provider with full API Key management support!\n\nYou can now use the Node SDK to create and manage API Keys for your end-users so they can authenticate with your own REST API. You can create, delete, enable/disable as many API Keys as you want for each of your end-user Account resources. See the Account resource's createApiKey and getApiKeys methods.\n\nNow for the really powerful stuff: the Stormpath Node SDK implements OAuth2 provider functionality. Your end-users can use these API Keys to make OAuth 2 requests to your REST API, and the Stormpath Node SDK will authenticate the requests via OAuth as you wish. This includes both OAuth 2 access token requests (e.g. the /oauth/token endpoint) as well as resource requests (e.g. /movies/1234). At no point do you ever need to see, touch, or write OAuth code! The Stormpath SDK does it for you.\n\nSee the Application resource's `authenticateApiRequest` method for detailed information.\n\n#### Improvements\n\n* You can use the new method `Application.resetPassword()` to validate a password reset token AND set a new password, with just one call to our API\n\n* You can authenticate an account against a specific account store when calling `Application.authenticateAccount()`, this is a useful performance option if you have a large number of stores and you know which store the user is in.\n\n### 0.2.0\n\nImprovements:\n\n* Support Redis and Memcahced as cache stores\n\n* Social provider support for Google and Facebook\n\n* Create, modify, delete Account Store Mappings\n\n* Add iterator methods to collection resources\n\nFixes:\n\n* Cache regions are now implemented\n\n* `Tenant.verifyAccountEmail` returns an `Account` object, as expected\n\nBreaking changes:\n\n* `Cache` now takes an options hash instead of positional params\n\n\n### 0.1.2\n\nFixed Readme to reflect 0.1.1 changes (this release does not affect code at all).\n\n### 0.1.1\n\nMinor bugfix [point release](https://github.com/stormpath/stormpath-sdk-node/issues?milestone=1&state=closed) that fixes a [bug](https://github.com/stormpath/stormpath-sdk-node/issues/11) where authentication fails when caching is enabled.\n\nAlso added a new [quickstart.js](https://github.com/stormpath/stormpath-sdk-node/blob/master/quickstart.js) file that reflects the Stormpath Node.js [Quickstart Documentation](http://docs.stormpath.com/nodejs/api/home).\n\n### 0.1.0\n\nOur first Node.js SDK release!\n\nAll functionality compared to our other SDKs is present _except_:\n\n* More robust [CustomData](http://docs.stormpath.com/rest/product-guide/#custom-data) support.  You can create and update an account's or group's custom data as part of the account or group creation or update request - you just can't manipulate and save the custom data by itself (i.e. `customData.save()` won't work, but `account.save()` will).\n\n* Caching implementations for network-accessible stores like Memcache and Redis.  A local in-memory (non clustered) cache mechanism is in place however.\n\n* Exhaustive documentation.  We think that the docs we have in place right now are pretty awesome and should cover most needs.  However, we want to finish out any remaining missing docs before the next release.\n\n* Exhaustive tests.  While we have been running integration tests regularly, the test coverage can be much better.  We already have 100% coverage on some core internals (like the `DataStore` and `RequestExecutor`), so we're confident with most of the implementations - enough to cut a release.  We will be finishing these entirely however in upcoming releases.\n\nWe're already actively working on a follow-up 0.2 release, but in the spirit of 'release early, release often', we wanted to get what we had out the door today to receive community feedback - please let us know your thoughts!\n\nSend us an email to support@stormpath.com or open up a Pull Request and offer suggestions!\n\n## Building\n\nThis code does not require a build step and can be immediately required by your node application after installed from npm (see above).\n\nYou may run the unit tests with the grunt command:\n\n```bash\ngrunt\n```\n\nOr the integration tests (which assume an apikey file in `~/.stormpath`):\n\n```bash\ngrunt it\n```\n\nTo build the documentation, you need to enter the `docs` directory, then run:\n\n```console\n$ npm install -g bower\n$ npm install\n$ bower install\n$ grunt\n```\n\nThe `grunt serve` command will build and serve the docs locally on port 9000.  You can\nview the HTML documentation by visiting http://localhost:9000/home in your browser.\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n",
  "readmeFilename": "README.md",
  "_id": "stormpath@0.4.3",
  "_shasum": "0b5b48d39001cb92245caebd034751a79b7261bc",
  "_from": "stormpath@^0.4.0",
  "_resolved": "https://registry.npmjs.org/stormpath/-/stormpath-0.4.3.tgz"
}
